(define (square x) (* x x))
(define (sum_2_largest_squares_of a b c)
        (cond ((and (<= a b) (<= a c)) (+ (square b) (square c)))
              ((and (<= b a) (<= b c)) (+ (square a) (square c)))
              (else (+ (square a) (square b)))))

; unit tests:
(display (= 13 (sum_2_largest_squares_of 1 2 3)))
(display (= 13 (sum_2_largest_squares_of 2 1 3)))
(display (= 13 (sum_2_largest_squares_of 2 3 1)))
(display (= 13 (sum_2_largest_squares_of 1 3 2)))
(display (= 13 (sum_2_largest_squares_of 3 1 2)))
(display (= 13 (sum_2_largest_squares_of 3 2 1)))
(display (= 8 (sum_2_largest_squares_of 1 2 2)))
(display (= 8 (sum_2_largest_squares_of 2 1 2)))
(display (= 8 (sum_2_largest_squares_of 2 2 1)))
(display (= 5 (sum_2_largest_squares_of 1 1 2)))
(display (= 5 (sum_2_largest_squares_of 2 1 1)))
(display (= 5 (sum_2_largest_squares_of 1 2 1)))
